// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: plugin/v1/messages/import.proto

package messages

import (
	tune "github.com/tomvodi/limepipes-plugin-api/musicmodel/v1/tune"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImportedTune struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The tune that was imported.
	Tune *tune.Tune `protobuf:"bytes,1,opt,name=tune,proto3" json:"tune,omitempty"`
	// The data with which the tune can be restored to a file.
	// In multi tune file formats like bww, this data will represent a single tune.
	// For single tune file formats like MusicXML, this data will always be empty.
	TuneFileData []byte `protobuf:"bytes,2,opt,name=tune_file_data,json=tuneFileData,proto3" json:"tune_file_data,omitempty"`
}

func (x *ImportedTune) Reset() {
	*x = ImportedTune{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_v1_messages_import_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportedTune) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportedTune) ProtoMessage() {}

func (x *ImportedTune) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_v1_messages_import_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportedTune.ProtoReflect.Descriptor instead.
func (*ImportedTune) Descriptor() ([]byte, []int) {
	return file_plugin_v1_messages_import_proto_rawDescGZIP(), []int{0}
}

func (x *ImportedTune) GetTune() *tune.Tune {
	if x != nil {
		return x.Tune
	}
	return nil
}

func (x *ImportedTune) GetTuneFileData() []byte {
	if x != nil {
		return x.TuneFileData
	}
	return nil
}

type ImportFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath string `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
}

func (x *ImportFileRequest) Reset() {
	*x = ImportFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_v1_messages_import_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportFileRequest) ProtoMessage() {}

func (x *ImportFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_v1_messages_import_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportFileRequest.ProtoReflect.Descriptor instead.
func (*ImportFileRequest) Descriptor() ([]byte, []int) {
	return file_plugin_v1_messages_import_proto_rawDescGZIP(), []int{1}
}

func (x *ImportFileRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type ImportFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The tunes that were imported.
	// In multi tune file formats like bww, this will contain all the tunes in the file.
	// For single tune file formats like MusicXML, this will contain a single tune.
	ImportedTunes []*ImportedTune `protobuf:"bytes,1,rep,name=imported_tunes,json=importedTunes,proto3" json:"imported_tunes,omitempty"`
}

func (x *ImportFileResponse) Reset() {
	*x = ImportFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_v1_messages_import_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportFileResponse) ProtoMessage() {}

func (x *ImportFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_v1_messages_import_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportFileResponse.ProtoReflect.Descriptor instead.
func (*ImportFileResponse) Descriptor() ([]byte, []int) {
	return file_plugin_v1_messages_import_proto_rawDescGZIP(), []int{2}
}

func (x *ImportFileResponse) GetImportedTunes() []*ImportedTune {
	if x != nil {
		return x.ImportedTunes
	}
	return nil
}

var File_plugin_v1_messages_import_proto protoreflect.FileDescriptor

var file_plugin_v1_messages_import_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x1d, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x75, 0x6e, 0x65, 0x2f, 0x74, 0x75, 0x6e, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x0c, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x54, 0x75, 0x6e, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x75, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x74, 0x75, 0x6e, 0x65, 0x2e, 0x54, 0x75, 0x6e, 0x65, 0x52, 0x04, 0x74, 0x75,
	0x6e, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x75, 0x6e, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x74, 0x75, 0x6e, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x11, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x5d, 0x0a, 0x12, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x47, 0x0a, 0x0e, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x75, 0x6e,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x54, 0x75, 0x6e, 0x65, 0x52, 0x0d, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x54, 0x75, 0x6e, 0x65, 0x73, 0x42, 0xcb, 0x01, 0x0a, 0x16, 0x63, 0x6f,
	0x6d, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x42, 0x0b, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x6f, 0x6d, 0x76, 0x6f, 0x64, 0x69, 0x2f, 0x6c, 0x69, 0x6d, 0x65, 0x70, 0x69, 0x70, 0x65,
	0x73, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0xa2,
	0x02, 0x03, 0x50, 0x56, 0x4d, 0xaa, 0x02, 0x12, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x56,
	0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0xca, 0x02, 0x12, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0xe2,
	0x02, 0x1e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x14, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugin_v1_messages_import_proto_rawDescOnce sync.Once
	file_plugin_v1_messages_import_proto_rawDescData = file_plugin_v1_messages_import_proto_rawDesc
)

func file_plugin_v1_messages_import_proto_rawDescGZIP() []byte {
	file_plugin_v1_messages_import_proto_rawDescOnce.Do(func() {
		file_plugin_v1_messages_import_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugin_v1_messages_import_proto_rawDescData)
	})
	return file_plugin_v1_messages_import_proto_rawDescData
}

var file_plugin_v1_messages_import_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_plugin_v1_messages_import_proto_goTypes = []any{
	(*ImportedTune)(nil),       // 0: plugin.v1.messages.ImportedTune
	(*ImportFileRequest)(nil),  // 1: plugin.v1.messages.ImportFileRequest
	(*ImportFileResponse)(nil), // 2: plugin.v1.messages.ImportFileResponse
	(*tune.Tune)(nil),          // 3: musicmodel.v1.tune.Tune
}
var file_plugin_v1_messages_import_proto_depIdxs = []int32{
	3, // 0: plugin.v1.messages.ImportedTune.tune:type_name -> musicmodel.v1.tune.Tune
	0, // 1: plugin.v1.messages.ImportFileResponse.imported_tunes:type_name -> plugin.v1.messages.ImportedTune
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_plugin_v1_messages_import_proto_init() }
func file_plugin_v1_messages_import_proto_init() {
	if File_plugin_v1_messages_import_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plugin_v1_messages_import_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ImportedTune); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_v1_messages_import_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ImportFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_v1_messages_import_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ImportFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugin_v1_messages_import_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugin_v1_messages_import_proto_goTypes,
		DependencyIndexes: file_plugin_v1_messages_import_proto_depIdxs,
		MessageInfos:      file_plugin_v1_messages_import_proto_msgTypes,
	}.Build()
	File_plugin_v1_messages_import_proto = out.File
	file_plugin_v1_messages_import_proto_rawDesc = nil
	file_plugin_v1_messages_import_proto_goTypes = nil
	file_plugin_v1_messages_import_proto_depIdxs = nil
}
